{"version":3,"file":"index-xl4x72_g.js","sources":["../../node_modules/react-dom/client.js","../../node_modules/styled-jsx/style.js","../../src/hooks/useHeroData.ts","../../src/components/PatchNotePopover.tsx","../../src/components/HeroSelector.tsx","../../src/components/StatsChart.tsx","../../src/contexts/ThemeContext.tsx","../../src/components/ThemeSwitcher.tsx","../../src/components/Dashboard.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","module.exports = require('./dist/index').style\n","import { useState, useEffect, useCallback, useMemo } from 'react';\nimport { Hero, HeroStat } from '../types';\n\ninterface HeroMetaData {\n  heroes: Hero[];\n}\n\ninterface MergedData {\n  [date: string]: {\n    h: HeroStat[];\n  };\n}\n\ninterface PatchNotes {\n  patches: Array<{\n    date: string;\n    hero: string[];\n    content: string;\n    patchType: 'buff' | 'nerf' | 'update';\n  }>;\n}\n\nexport function useHeroData() {\n  const [heroMeta, setHeroMeta] = useState<HeroMetaData | null>(null);\n  const [mergedData, setMergedData] = useState<MergedData | null>(null);\n  const [patchNotes, setPatchNotes] = useState<PatchNotes | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const [selectedHeroes, setSelectedHeroes] = useState<string[]>([]);\n\n  // 获取所有可用日期\n  const availableDates = useMemo(() => {\n    if (!mergedData) return [];\n    return Object.keys(mergedData).sort();\n  }, [mergedData]);\n\n  // 加载数据\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const [heroMetaResponse, mergedDataResponse, patchNotesResponse] = await Promise.all([\n          fetch('/data/hero_meta.json'),\n          fetch('/data/merged_data.json'),\n          fetch('/data/patch_notes.json')\n        ]);\n\n        const [heroMetaData, mergedDataJson, patchNotesData] = await Promise.all([\n          heroMetaResponse.json(),\n          mergedDataResponse.json(),\n          patchNotesResponse.json()\n        ]);\n\n        setHeroMeta(heroMetaData);\n        setMergedData(mergedDataJson);\n        setPatchNotes(patchNotesData);\n      } catch (err) {\n        setError(err instanceof Error ? err : new Error('Failed to load data'));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n  \n\n  // 根据ID获取英雄信息\n  const getHeroById = useCallback((heroId: string) => {\n    return heroMeta?.heroes.find(hero => hero.hero_id === heroId);\n  }, [heroMeta]);\n\n  // 切换英雄选择\n  const toggleHeroSelection = useCallback((heroId: string) => {\n    setSelectedHeroes(prev => {\n      if (prev.includes(heroId)) {\n        return prev.filter(id => id !== heroId);\n      }\n      if (prev.length >= 10) {\n        return prev;\n      }\n      return [...prev, heroId];\n    });\n  }, []);\n\n  // 清除所有选择\n  const clearHeroSelection = useCallback(() => {\n    setSelectedHeroes([]);\n  }, []);\n\n  // 获取选中英雄的历史数据\n  const getHeroStatHistoryForSelectedHeroes = useCallback((): { [date: string]: { h: HeroStat[] } } => {\n    if (!mergedData || !selectedHeroes.length) return {};\n\n    const result: { [date: string]: { h: HeroStat[] } } = {};\n    \n    Object.entries(mergedData)\n      .sort(([dateA], [dateB]) => dateA.localeCompare(dateB))\n      .forEach(([date, data]) => {\n        const heroStats = selectedHeroes.map(heroId => {\n          const stat = data.h.find(s => s.i === heroId);\n          if (stat) {\n            return {\n              i: heroId,\n              w: stat.w,\n              s: stat.s,\n              k: stat.k\n            };\n          }\n          return {\n            i: heroId,\n            w: 0,\n            s: 0,\n            k: 0\n          };\n        });\n        \n        result[date] = { h: heroStats };\n      });\n\n    return result;\n  }, [mergedData, selectedHeroes]);\n\n  return {\n    heroMeta,\n    mergedData,\n    patchNotes,\n    loading,\n    error,\n    selectedHeroes,\n    availableDates,\n    getHeroById,\n    getHeroStatHistoryForSelectedHeroes,\n    toggleHeroSelection,\n    clearHeroSelection\n  };\n} ","import React, { useEffect } from 'react';\nimport { PatchNote } from '../types';\nimport { createPortal } from 'react-dom';\n\ninterface PatchNotePopoverProps {\n  patches: PatchNote[];\n  heroId: string;\n  onClose: () => void;\n}\n\nconst PatchNotePopover: React.FC<PatchNotePopoverProps> = ({ patches, heroId, onClose }) => {\n  const heroPatches = patches.filter(patch => patch.hero.includes(heroId));\n\n  // 在组件挂载时阻止背景滚动\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, []);\n\n  // 按日期分组并排序\n  const groupedPatches = React.useMemo(() => {\n    const grouped: Record<string, PatchNote[]> = {};\n    \n    heroPatches.forEach(patch => {\n      if (!grouped[patch.date]) {\n        grouped[patch.date] = [];\n      }\n      grouped[patch.date].push(patch);\n    });\n    \n    return Object.entries(grouped)\n      .sort(([dateA], [dateB]) => dateB.localeCompare(dateA))\n      .map(([date, patches]) => ({ date, patches }));\n  }, [heroPatches]);\n\n  // 使用 Portal 将弹出层渲染到 body 的最后\n  return createPortal(\n    <div className=\"patch-note-root\">\n      <div className=\"patch-note-overlay\" onClick={onClose}>\n        <div className=\"patch-note-popover\" onClick={e => e.stopPropagation()}>\n          <div className=\"patch-note-header\">\n            <h3>更新历史</h3>\n            <button className=\"close-button\" onClick={onClose}>×</button>\n          </div>\n          <div className=\"patch-note-content\">\n            {heroPatches.length > 0 ? (\n              <div className=\"patch-list\">\n                {groupedPatches.map(({ date, patches }) => (\n                  <div key={date} className=\"patch-date-group\">\n                    <div className=\"patch-date-header\">{date}</div>\n                    <div className=\"patch-items\">\n                      {patches.map((patch, index) => (\n                        <div key={index} className={`patch-item ${patch.patchType}`}>\n                          <div className=\"patch-type-indicator\">\n                            <div className=\"patch-type-badge\">\n                              {patch.patchType === 'buff' ? '增强' : \n                               patch.patchType === 'nerf' ? '削弱' : '更新'}\n                            </div>\n                          </div>\n                          <div className=\"patch-content\">{patch.content}</div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div className=\"no-patches\">暂无更新记录</div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .patch-note-root {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100vw;\n          height: 100vh;\n          pointer-events: none;\n          z-index: 999999;\n        }\n\n        .patch-note-overlay {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background-color: rgba(0, 0, 0, 0.9);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          pointer-events: all;\n        }\n\n        .patch-note-popover {\n          background-color: #1A1A1D;\n          border-radius: 8px;\n          width: 90%;\n          max-width: 600px;\n          max-height: 80vh;\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.7);\n          border: 1px solid #333;\n          overflow: hidden;\n          animation: slideIn 0.2s ease-out;\n          color: #fff;\n          position: relative;\n        }\n\n        .patch-note-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 12px 16px;\n          border-bottom: 1px solid #333;\n          background-color: #111113;\n          position: sticky;\n          top: 0;\n        }\n\n        .patch-note-header h3 {\n          margin: 0;\n          font-size: 18px;\n          font-weight: 500;\n          color: #F0A500;\n        }\n\n        .close-button {\n          background: none;\n          border: none;\n          color: #999;\n          font-size: 22px;\n          cursor: pointer;\n          padding: 0;\n          width: 28px;\n          height: 28px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-radius: 50%;\n          transition: all 0.2s;\n        }\n\n        .close-button:hover {\n          color: #fff;\n          background: rgba(255, 255, 255, 0.1);\n        }\n\n        .patch-note-content {\n          padding: 0;\n          overflow-y: auto;\n          max-height: calc(80vh - 50px);\n          background-color: #1A1A1D;\n        }\n\n        .patch-list {\n          display: flex;\n          flex-direction: column;\n          background-color: #1A1A1D;\n        }\n\n        .patch-date-group {\n          display: flex;\n          flex-direction: column;\n          background-color: #1A1A1D;\n        }\n\n        .patch-date-header {\n          font-size: 16px;\n          font-weight: 600;\n          color: #F0A500;\n          padding: 12px 16px;\n          background-color: #1A1A1D;\n          position: sticky;\n          top: 0;\n        }\n\n        .patch-items {\n          display: flex;\n          flex-direction: column;\n          background-color: #1A1A1D;\n        }\n\n        .patch-item {\n          padding: 12px 16px;\n          position: relative;\n          border-left: 4px solid transparent;\n          border-bottom: 1px solid #333;\n          background-color: #1A1A1D;\n        }\n\n        .patch-item:last-child {\n          border-bottom: none;\n        }\n\n        .patch-item.buff {\n          border-left-color: #28A745;\n        }\n\n        .patch-item.nerf {\n          border-left-color: #DC3545;\n        }\n\n        .patch-item.update {\n          border-left-color: #F0A500;\n        }\n\n        .patch-type-indicator {\n          display: flex;\n          align-items: center;\n          margin-bottom: 8px;\n        }\n\n        .patch-type-badge {\n          font-size: 12px;\n          padding: 2px 8px;\n          border-radius: 4px;\n          font-weight: normal;\n          display: inline-block;\n        }\n\n        .buff .patch-type-badge {\n          background: rgba(40, 167, 69, 0.2);\n          color: #28A745;\n        }\n\n        .nerf .patch-type-badge {\n          background: rgba(220, 53, 69, 0.2);\n          color: #DC3545;\n        }\n\n        .update .patch-type-badge {\n          background: rgba(240, 165, 0, 0.2);\n          color: #F0A500;\n        }\n\n        .patch-content {\n          font-size: 14px;\n          line-height: 1.5;\n          color: #CCC;\n          white-space: pre-line;\n        }\n\n        .no-patches {\n          text-align: center;\n          color: #999;\n          padding: 32px;\n          font-size: 14px;\n        }\n\n        @keyframes slideIn {\n          from {\n            transform: translateY(10px);\n            opacity: 0;\n          }\n          to {\n            transform: translateY(0);\n            opacity: 1;\n          }\n        }\n      `}</style>\n    </div>,\n    document.body\n  );\n};\n\nexport default PatchNotePopover; ","import React, { useState, useMemo } from 'react';\nimport { Hero, HeroStat, PatchNote } from '../types';\nimport PatchNotePopover from './PatchNotePopover';\n\ninterface HeroSelectorProps {\n  heroes: Hero[];\n  selectedHeroes: string[];\n  latestStats: Record<string, HeroStat>;\n  patches?: PatchNote[];\n  onHeroToggle: (heroId: string) => void;\n  onClearSelection: () => void;\n}\n\nconst HEROES_PER_PAGE = 12;\n\nconst HeroSelector: React.FC<HeroSelectorProps> = ({\n  heroes,\n  selectedHeroes,\n  latestStats,\n  patches = [],\n  onHeroToggle,\n  onClearSelection\n}) => {\n  console.log(patches);\n  \n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedRole, setSelectedRole] = useState<'all' | 'tank' | 'damage' | 'support'>('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [selectedPatchHero, setSelectedPatchHero] = useState<string | null>(null);\n\n  const filteredHeroes = useMemo(() => {\n    return heroes.filter(hero => {\n      const matchesSearch = hero.hero_name.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesRole = selectedRole === 'all' || hero.hero_role.toLowerCase() === selectedRole;\n      return matchesSearch && matchesRole;\n    });\n  }, [heroes, searchTerm, selectedRole]);\n\n  const totalPages = Math.ceil(filteredHeroes.length / HEROES_PER_PAGE);\n  const paginatedHeroes = filteredHeroes.slice(\n    (currentPage - 1) * HEROES_PER_PAGE,\n    currentPage * HEROES_PER_PAGE\n  );\n\n  // Reset to first page when filters change\n  React.useEffect(() => {\n    setCurrentPage(1);\n  }, [searchTerm, selectedRole]);\n\n  // 获取最近更新的英雄\n  const recentlyUpdatedHeroes = useMemo(() => {\n    const now = new Date();\n    const thirtyDaysAgo = new Date(now.setDate(now.getDate() - 30));\n    \n    return patches\n      .filter(patch => {\n        const patchDate = new Date(patch.date);\n        return patchDate >= thirtyDaysAgo;\n      })\n      .reduce((acc, patch) => {\n        patch.hero.forEach(heroId => acc.add(heroId));\n        return acc;\n      }, new Set<string>());\n  }, [patches]);\n\n  return (\n    <div className=\"hero-selector\">\n      <div className=\"hero-selector-header\">\n        <h2 className=\"section-title\">英雄选择</h2>\n        <div className=\"search-bar\">\n          <input\n            type=\"text\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            placeholder=\"搜索英雄...\"\n            className=\"search-input\"\n          />\n          <button onClick={onClearSelection} className=\"clear-button\">\n            清除选择\n          </button>\n        </div>\n        <div className=\"role-filters\">\n          <button\n            className={`role-button ${selectedRole === 'all' ? 'active' : ''}`}\n            onClick={() => setSelectedRole('all')}\n          >\n            全部\n          </button>\n          <button\n            className={`role-button ${selectedRole === 'tank' ? 'active' : ''}`}\n            onClick={() => setSelectedRole('tank')}\n          >\n            坦克\n          </button>\n          <button\n            className={`role-button ${selectedRole === 'damage' ? 'active' : ''}`}\n            onClick={() => setSelectedRole('damage')}\n          >\n            输出\n          </button>\n          <button\n            className={`role-button ${selectedRole === 'support' ? 'active' : ''}`}\n            onClick={() => setSelectedRole('support')}\n          >\n            支援\n          </button>\n        </div>\n      </div>\n\n      <div className=\"heroes-grid\">\n        {paginatedHeroes.map((hero) => {\n          const isSelected = selectedHeroes.includes(hero.hero_id);\n          const stats = latestStats[hero.hero_id];\n          const hasRecentUpdate = recentlyUpdatedHeroes.has(hero.hero_id);\n          \n          return (\n            <div\n              key={hero.hero_id}\n              className={`hero-card ${isSelected ? 'selected' : ''}`}\n              onClick={() => onHeroToggle(hero.hero_id)}\n            >\n              <div className=\"hero-image-container\">\n                <img\n                  src={hero.hero_icon}\n                  alt={hero.hero_name}\n                  className=\"hero-image\"\n                />\n                <div className=\"hero-role-icon\">\n                  <span className={`role-icon ${hero.hero_role.toLowerCase()}`} />\n                </div>\n                {hasRecentUpdate && (\n                  <button \n                    className=\"patch-note-button\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      setSelectedPatchHero(hero.hero_id);\n                    }}\n                  >\n                    <span className=\"patch-icon\">★</span>\n                  </button>\n                )}\n              </div>\n              <div className=\"hero-info\">\n                <div className=\"hero-name\">{hero.hero_name}</div>\n                {stats && (\n                  <div className=\"hero-stats\">\n                    <span className=\"stat\">胜率: {(stats.w).toFixed(1)}%</span>\n                    <span className=\"stat\">选率: {(stats.s).toFixed(1)}%</span>\n                  </div>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {totalPages > 1 && (\n        <div className=\"pagination\">\n          <button\n            className=\"page-button\"\n            onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n            disabled={currentPage === 1}\n          >\n            上一页\n          </button>\n          <span className=\"page-info\">\n            {currentPage} / {totalPages}\n          </span>\n          <button\n            className=\"page-button\"\n            onClick={() => setCurrentPage(p => Math.min(totalPages, p + 1))}\n            disabled={currentPage === totalPages}\n          >\n            下一页\n          </button>\n        </div>\n      )}\n\n      {selectedPatchHero && (\n        <PatchNotePopover\n          patches={patches}\n          heroId={selectedPatchHero}\n          onClose={() => setSelectedPatchHero(null)}\n        />\n      )}\n\n      <style jsx>{`\n        .hero-selector {\n          background: var(--card-background);\n          border-radius: 12px;\n          padding: 16px;\n          height: 100%;\n          display: flex;\n          flex-direction: column;\n          gap: 16px;\n          font-family: \"BigNoodleTooOblique\", \"Koverwatch\", sans-serif;\n        }\n\n        .hero-selector-header {\n          display: flex;\n          flex-direction: column;\n          gap: 12px;\n        }\n\n        .section-title {\n          font-size: 24px;\n          font-weight: 500;\n          color: var(--text);\n          margin: 0;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n        }\n\n        .search-bar {\n          position: relative;\n          width: 100%;\n        }\n\n        .search-input {\n          width: 100%;\n          padding: 8px 36px 8px 12px;\n          border-radius: 4px;\n          background: var(--input-background);\n          border: 1px solid var(--input-border);\n          color: var(--input-text);\n          font-size: 14px;\n          transition: all 0.2s;\n          font-family: \"Koverwatch\", sans-serif;\n        }\n\n        .search-input:focus {\n          border-color: var(--primary);\n          outline: none;\n          box-shadow: 0 0 0 2px var(--primary-transparent);\n        }\n\n        .clear-button {\n          position: absolute;\n          right: 8px;\n          top: 50%;\n          transform: translateY(-50%);\n          background: transparent;\n          border: none;\n          color: var(--secondary-text);\n          cursor: pointer;\n          padding: 4px;\n          border-radius: 4px;\n          font-size: 12px;\n          transition: all 0.2s;\n          font-family: \"Koverwatch\", sans-serif;\n        }\n\n        .clear-button:hover {\n          color: var(--text);\n          background: var(--secondary);\n        }\n\n        .role-filters {\n          display: flex;\n          gap: 4px;\n          padding: 4px;\n          background: var(--secondary);\n          border-radius: 4px;\n        }\n\n        .role-button {\n          flex: 1;\n          padding: 6px 8px;\n          border-radius: 4px;\n          background: transparent;\n          border: 1px solid transparent;\n          color: var(--button-text);\n          cursor: pointer;\n          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n          font-size: 14px;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n          font-family: \"BigNoodleTooOblique\", \"Koverwatch\", sans-serif;\n        }\n\n        .role-button:hover {\n          background: var(--button-background-hover);\n        }\n\n        .role-button.active {\n          background: var(--primary);\n          border-color: var(--primary);\n          box-shadow: 0 0 12px var(--primary-transparent);\n        }\n\n        .heroes-grid {\n          display: grid;\n          grid-template-columns: repeat(3, 1fr);\n          gap: 16px;\n          padding: 8px;\n          overflow-y: auto;\n          flex: 1;\n          min-height: 0;\n          grid-auto-rows: 1fr;\n        }\n\n        .hero-card {\n          position: relative;\n          aspect-ratio: 1;\n          border-radius: 6px;\n          overflow: hidden;\n          cursor: pointer;\n          transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n          background: var(--secondary);\n          border: 1px solid var(--border);\n          width: 100%;\n          height: 100%;\n        }\n\n        .hero-card:hover {\n          transform: translateY(-2px);\n          border-color: var(--primary);\n          box-shadow: 0 4px 12px var(--shadow);\n        }\n\n        .hero-card.selected {\n          border-color: var(--primary);\n          box-shadow: 0 0 16px var(--primary-transparent);\n        }\n\n        .hero-image-container {\n          position: relative;\n          width: 100%;\n          height: 100%;\n        }\n\n        .hero-image {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n          transition: transform 0.3s ease;\n          filter: brightness(1.1) contrast(1.1);\n        }\n\n        .hero-card:hover .hero-image {\n          transform: scale(1.05);\n        }\n\n        .hero-role-icon {\n          position: absolute;\n          top: 4px;\n          right: 4px;\n          width: 16px;\n          height: 16px;\n          background: rgba(0, 0, 0, 0.5);\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n\n        .role-icon {\n          width: 12px;\n          height: 12px;\n          background-size: contain;\n          background-repeat: no-repeat;\n          background-position: center;\n        }\n\n        .role-icon.tank {\n          background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"%23f99e1c\"><path d=\"M12 2L4 5v6c0 5.5 3.8 10.7 8 12 4.2-1.3 8-6.5 8-12V5l-8-3zm0 4c2.2 0 4 1.8 4 4s-1.8 4-4 4-4-1.8-4-4 1.8-4 4-4z\"/></svg>');\n        }\n\n        .role-icon.damage {\n          background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"%23f99e1c\"><path d=\"M12 2L2 12l10 10 10-10L12 2zm-1 12H7v-2h4V8h2v4h4v2h-4v4h-2v-4z\"/></svg>');\n        }\n\n        .role-icon.support {\n          background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"%23f99e1c\"><path d=\"M12 2L2 7l2 11h16l2-11L12 2zm0 4c2.2 0 4 1.8 4 4s-1.8 4-4 4-4-1.8-4-4 1.8-4 4-4z\"/></svg>');\n        }\n\n        .hero-info {\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          right: 0;\n          padding: 8px;\n          background: linear-gradient(to top, \n            rgba(0, 0, 0, 0.95) 0%,\n            rgba(0, 0, 0, 0.85) 30%,\n            rgba(0, 0, 0, 0.6) 60%,\n            rgba(0, 0, 0, 0.2) 80%,\n            rgba(0, 0, 0, 0) 100%\n          );\n          color: var(--text);\n          font-family: \"BigNoodleTooOblique\", \"Koverwatch\", sans-serif;\n        }\n\n        .hero-name {\n          font-size: 14px;\n          font-weight: 500;\n          margin-bottom: 2px;\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n          text-shadow: 0 1px 3px rgba(0, 0, 0, 1);\n          color: #fff;\n        }\n\n        .hero-stats {\n          display: flex;\n          justify-content: space-between;\n          font-size: 12px;\n          color: rgba(255, 255, 255, 0.95);\n          text-shadow: 0 1px 3px rgba(0, 0, 0, 1);\n        }\n\n        .stat {\n          display: inline-block;\n          background: rgba(0, 0, 0, 0.4);\n          padding: 1px 4px;\n          border-radius: 2px;\n          font-size: 11px;\n        }\n\n        .pagination {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 12px 0 4px;\n          border-top: 1px solid var(--border);\n          margin-top: 8px;\n        }\n\n        .page-button {\n          padding: 4px 12px;\n          border-radius: 4px;\n          background: var(--button-background);\n          border: 1px solid var(--border);\n          color: var(--button-text);\n          font-size: 12px;\n          transition: all 0.2s;\n        }\n\n        .page-button:hover:not(:disabled) {\n          background: var(--button-background-hover);\n          transform: translateY(-1px);\n        }\n\n        .page-button:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n\n        .page-info {\n          font-size: 12px;\n          color: var(--secondary-text);\n        }\n\n        @media (max-width: 1200px) {\n          .hero-selector {\n            height: auto;\n            max-height: none;\n          }\n\n          .heroes-grid {\n            grid-template-columns: repeat(6, 1fr);\n            gap: 16px;\n            padding: 8px;\n          }\n        }\n\n        @media (max-width: 768px) {\n          .heroes-grid {\n            grid-template-columns: repeat(4, 1fr);\n            gap: 12px;\n            padding: 6px;\n          }\n\n          .hero-selector h2 {\n            font-size: 20px;\n          }\n        }\n\n        @media (max-width: 480px) {\n          .heroes-grid {\n            grid-template-columns: repeat(3, 1fr);\n            gap: 8px;\n            padding: 4px;\n          }\n\n          .role-filters {\n            flex-wrap: wrap;\n          }\n\n          .role-button {\n            flex: 1 1 calc(50% - 4px);\n            font-size: 12px;\n          }\n\n          .hero-selector h2 {\n            font-size: 18px;\n          }\n\n          .hero-name {\n            font-size: 12px;\n          }\n\n          .hero-stats {\n            font-size: 10px;\n          }\n        }\n\n        .patch-note-button {\n          position: absolute;\n          top: 4px;\n          left: 4px;\n          width: 24px;\n          height: 24px;\n          border-radius: 50%;\n          background: var(--primary);\n          border: none;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n          padding: 0;\n          color: #fff;\n          font-size: 14px;\n          transition: all 0.2s;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);\n          z-index: 2;\n        }\n\n        .patch-note-button:hover {\n          transform: scale(1.1);\n          background: var(--accent);\n        }\n\n        .patch-icon {\n          animation: pulse 2s infinite;\n        }\n\n        @keyframes pulse {\n          0% {\n            transform: scale(1);\n            opacity: 1;\n          }\n          50% {\n            transform: scale(1.2);\n            opacity: 0.8;\n          }\n          100% {\n            transform: scale(1);\n            opacity: 1;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default HeroSelector; ","import React from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer\n} from 'recharts';\nimport dayjs from 'dayjs';\nimport { HeroStat } from '../types';\n\n// 使用更灵活的类型定义\ninterface StatsChartProps {\n  data: { [date: string]: { h: HeroStat[] } };\n  statType: 'w' | 's' | 'k';\n  heroColors: Record<string, string>;\n  heroNames: Record<string, string>;\n  patchDates: string[];\n  heroMeta?: any; // 使用 any 类型以避免类型不匹配问题\n}\n\nconst StatsChart: React.FC<StatsChartProps> = ({\n  data,\n  statType,\n  heroColors,\n  heroNames,\n  patchDates,\n  heroMeta\n}) => {\n  const formatDate = (date: string) => {\n    return dayjs(date).format('MM/DD');\n  };\n\n  const formatValue = (value: number) => {\n    if (statType === 'k') return value.toFixed(2);\n    // 胜率和选择率已经是百分比形式，不需要乘以100\n    return `${value.toFixed(1)}%`;\n  };\n\n  // const getStatLabel = (type: 'w' | 's' | 'k') => {\n  //   switch (type) {\n  //     case 'w': return '胜率';\n  //     case 's': return '选择率';\n  //     case 'k': return '击杀数';\n  //     default: return '';\n  //   }\n  // };\n\n  const getYAxisDomain = () => {\n    if (statType === 'k') return [0, 'auto'];\n    \n    // 为胜率和选择率设置合适的范围\n    let minValue = Infinity;\n    let maxValue = -Infinity;\n    \n    if (Object.keys(data).length > 0) {\n      Object.values(data).forEach(({ h }) => {\n        h.forEach((stat) => {\n          const value = stat[statType];\n          if (value !== undefined && typeof value === 'number') {\n            minValue = Math.min(minValue, value);\n            maxValue = Math.max(maxValue, value);\n          }\n        });\n      });\n      \n      if (minValue !== Infinity && maxValue !== -Infinity) {\n        // 计算数值范围\n        const range = maxValue - minValue;\n        // 扩展范围以显示更多上下文\n        minValue = Math.max(0, minValue - range * 0.1);\n        maxValue = Math.min(100, maxValue + range * 0.1);\n        \n        // 如果范围太小，扩大显示范围以突出差异\n        if (range < 5) {\n          const mid = (minValue + maxValue) / 2;\n          minValue = Math.max(0, mid - 2.5);\n          maxValue = Math.min(100, mid + 2.5);\n        }\n      } else {\n        minValue = 0;\n        maxValue = 100;\n      }\n    }\n    \n    return [minValue, maxValue];\n  };\n\n  // const getStatIcon = (type: 'w' | 's' | 'k') => {\n  //   switch (type) {\n  //     case 'w':\n  //       return (\n  //         <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n  //           <path d=\"M12 2L2 22h20L12 2zm0 4l6.5 13h-13L12 6z\"/>\n  //         </svg>\n  //       );\n  //     case 's':\n  //       return (\n  //         <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n  //           <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n  //         </svg>\n  //       );\n  //     case 'k':\n  //       return (\n  //         <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n  //           <path d=\"M7 5h2v14H7V5zm14 14h-2v-6.63L15.5 8 12 12.37 8.5 8 5 12.37V19H3V5h2l5.5 6 3.5-4.37L19.5 11H21v8z\"/>\n  //         </svg>\n  //       );\n  //     default:\n  //       return null;\n  //   }\n  // };\n\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (!active || !payload || !payload.length) return null;\n\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"tooltip-date\">{formatDate(label)}</p>\n        <div className=\"tooltip-content\">\n          {payload.map((entry: any) => (\n            <div key={entry.name} className=\"tooltip-item\">\n              <span className=\"tooltip-bullet\" style={{ backgroundColor: entry.color }}></span>\n              <span className=\"tooltip-name\">{heroNames[entry.name]}</span>\n              <span className=\"tooltip-value\">{formatValue(entry.value)}</span>\n            </div>\n          ))}\n        </div>\n        <style jsx>{`\n          .custom-tooltip {\n            background: var(--card-background);\n            border: 1px solid var(--border);\n            border-radius: 6px;\n            padding: 8px 12px;\n            box-shadow: 0 4px 12px var(--shadow);\n          }\n\n          .tooltip-date {\n            margin: 0 0 8px 0;\n            color: var(--text);\n            font-size: 12px;\n          }\n\n          .tooltip-content {\n            display: flex;\n            flex-direction: column;\n            gap: 8px;\n          }\n\n          .tooltip-item {\n            display: flex;\n            align-items: center;\n            gap: 8px;\n          }\n\n          .tooltip-bullet {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n          }\n\n          .tooltip-name {\n            color: var(--text);\n            font-size: 14px;\n          }\n\n          .tooltip-value {\n            color: var(--success);\n            font-weight: 500;\n            margin-left: auto;\n          }\n        `}</style>\n      </div>\n    );\n  };\n\n  const CustomizedDot = (props: any) => {\n    const { cx, cy, payload } = props;\n    const isPatchDate = patchDates.includes(payload.date);\n\n    if (!isPatchDate) return null;\n\n    return (\n      <circle\n        cx={cx}\n        cy={cy}\n        r={4}\n        stroke=\"#fff\"\n        strokeWidth={2}\n        fill=\"#f97316\"\n      />\n    );\n  };\n\n  const CustomizedAxisTick = (props: any) => {\n    const { x, y, payload } = props;\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text\n          x={0}\n          y={0}\n          dy={16}\n          textAnchor=\"middle\"\n          fill=\"#999\"\n          fontSize={12}\n        >\n          {formatDate(payload.value)}\n        </text>\n      </g>\n    );\n  };\n\n  const CustomizedLabel = (props: any) => {\n    const { x, y, value, heroId } = props;\n    const isLastPoint = props.index === Object.keys(data).length - 1;\n    \n    if (!isLastPoint) return null;\n\n    return (\n      <g>\n        <image\n          x={x + 10}\n          y={y - 12}\n          width={24}\n          height={24}\n          xlinkHref={heroMeta?.heroes.find((h: any) => h.hero_id === heroId)?.hero_icon}\n          style={{ filter: 'drop-shadow(0px 0px 2px rgba(0,0,0,0.5))' }}\n        />\n        <text\n          x={x + 40}\n          y={y + 4}\n          fill=\"#ffffff\"\n          fontSize={12}\n          textAnchor=\"start\"\n          style={{\n            filter: 'drop-shadow(0px 0px 3px rgba(0,0,0,0.9))',\n            fontWeight: 500\n          }}\n        >\n          {heroNames[heroId]} ({formatValue(value)})\n        </text>\n      </g>\n    );\n  };\n\n  // 将对象数据转换为数组格式以适应 recharts\n  const chartData = Object.entries(data).map(([date, { h }]) => ({\n    date,\n    ...h.reduce((acc, stat) => ({\n      ...acc,\n      [stat.i]: stat[statType]\n    }), {})\n  }));\n\n  return (\n    <div className=\"stats-chart\">\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart\n          data={chartData}\n          margin={{\n            top: 20,\n            right: 120,\n            left: 20,\n            bottom: 20\n          }}\n        >\n          <CartesianGrid\n            strokeDasharray=\"3 3\"\n            vertical={false}\n            stroke=\"rgba(255, 255, 255, 0.1)\"\n          />\n          <XAxis\n            dataKey=\"date\"\n            tick={<CustomizedAxisTick />}\n            stroke=\"#666\"\n          />\n          <YAxis\n            domain={getYAxisDomain() as any}\n            tickFormatter={formatValue}\n            stroke=\"#666\"\n            tick={{ fill: '#999', fontSize: 12 }}\n            width={60}\n          />\n          <Tooltip content={<CustomTooltip />} />\n          {Object.keys(heroColors).map((heroId) => (\n            <Line\n              key={heroId}\n              type=\"monotone\"\n              dataKey={heroId}\n              name={heroId}\n              stroke={heroColors[heroId]}\n              strokeWidth={2}\n              dot={<CustomizedDot />}\n              activeDot={{ r: 6, fill: heroColors[heroId] }}\n              label={<CustomizedLabel heroId={heroId} />}\n            />\n          ))}\n        </LineChart>\n      </ResponsiveContainer>\n\n      <style jsx>{`\n        .stats-chart {\n          background: var(--card-background);\n          border-radius: 12px;\n          padding: 20px;\n          height: 100%;\n        }\n\n        @media (max-width: 768px) {\n          .stats-chart {\n            padding: 16px;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default StatsChart;","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { Theme, ThemeName } from '../types';\n\n// 定义主题\nconst themes: Theme[] = [\n  {\n    name: 'dark',\n    label: '暗黑主题',\n    colors: {\n      background: '#0D1117',\n      cardBackground: '#161B22',\n      cardBackgroundHover: '#21262D',\n      text: '#ffffff',\n      secondaryText: '#8B949E',\n      primary: '#f99e1c',\n      primaryTransparent: 'rgba(249, 158, 28, 0.2)',\n      secondary: '#21262D',\n      accent: '#ff9e1c',\n      border: '#30363D',\n      chartGrid: 'rgba(255, 255, 255, 0.1)',\n      success: '#4ade80',\n      warning: '#f99e1c',\n      error: '#f87171',\n      buttonBackground: '#21262D',\n      buttonBackgroundHover: '#30363D',\n      buttonText: '#ffffff',\n      inputBackground: '#0D1117',\n      inputBorder: '#30363D',\n      inputText: '#ffffff',\n      shadow: 'rgba(0, 0, 0, 0.3)'\n    }\n  }\n];\n\ninterface ThemeContextType {\n  currentTheme: Theme;\n  setTheme: (themeName: ThemeName) => void;\n  availableThemes: Theme[];\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nconst THEME_STORAGE_KEY = 'ow-dashboard-theme';\n\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [currentTheme, setCurrentTheme] = useState<Theme>(themes[0]);\n\n  // 加载保存的主题\n  useEffect(() => {\n    const savedTheme = localStorage.getItem(THEME_STORAGE_KEY);\n    if (savedTheme) {\n      const theme = themes.find(t => t.name === savedTheme);\n      if (theme) {\n        setCurrentTheme(theme);\n      }\n    }\n  }, []);\n\n  const setTheme = (themeName: ThemeName) => {\n    const theme = themes.find(t => t.name === themeName);\n    if (theme) {\n      setCurrentTheme(theme);\n      localStorage.setItem(THEME_STORAGE_KEY, themeName);\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ currentTheme, setTheme, availableThemes: themes }}>\n      <div className=\"theme-wrapper\">\n        {children}\n        <style jsx global>{`\n          :root {\n            --background: ${currentTheme.colors.background};\n            --card-background: ${currentTheme.colors.cardBackground};\n            --card-background-hover: ${currentTheme.colors.cardBackgroundHover};\n            --text: ${currentTheme.colors.text};\n            --secondary-text: ${currentTheme.colors.secondaryText};\n            --primary: ${currentTheme.colors.primary};\n            --primary-transparent: ${currentTheme.colors.primaryTransparent};\n            --secondary: ${currentTheme.colors.secondary};\n            --accent: ${currentTheme.colors.accent};\n            --border: ${currentTheme.colors.border};\n            --chart-grid: ${currentTheme.colors.chartGrid};\n            --success: ${currentTheme.colors.success};\n            --warning: ${currentTheme.colors.warning};\n            --error: ${currentTheme.colors.error};\n            --button-background: ${currentTheme.colors.buttonBackground};\n            --button-background-hover: ${currentTheme.colors.buttonBackgroundHover};\n            --button-text: ${currentTheme.colors.buttonText};\n            --input-background: ${currentTheme.colors.inputBackground};\n            --input-border: ${currentTheme.colors.inputBorder};\n            --input-text: ${currentTheme.colors.inputText};\n            --shadow: ${currentTheme.colors.shadow};\n          }\n\n          body {\n            background-color: var(--background);\n            color: var(--text);\n            transition: background-color 0.3s, color 0.3s;\n          }\n\n          button {\n            background-color: var(--button-background);\n            color: var(--button-text);\n            border: 1px solid var(--border);\n            transition: all 0.2s;\n          }\n\n          button:hover:not(:disabled) {\n            background-color: var(--button-background-hover);\n          }\n\n          input {\n            background-color: var(--input-background);\n            color: var(--input-text);\n            border: 1px solid var(--input-border);\n          }\n\n          input:focus {\n            border-color: var(--primary);\n            outline: none;\n          }\n\n          ::-webkit-scrollbar {\n            width: 8px;\n            height: 8px;\n          }\n\n          ::-webkit-scrollbar-track {\n            background: var(--card-background);\n            border-radius: 4px;\n          }\n\n          ::-webkit-scrollbar-thumb {\n            background: var(--border);\n            border-radius: 4px;\n          }\n\n          ::-webkit-scrollbar-thumb:hover {\n            background: var(--secondary);\n          }\n        `}</style>\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}; ","import React from 'react';\nimport { useTheme } from '../contexts/ThemeContext';\n\nconst ThemeSwitcher: React.FC = () => {\n  const { currentTheme } = useTheme();\n\n  return (\n    <div className=\"theme-switcher\">\n      <div className=\"theme-label\">\n        {currentTheme.label}\n      </div>\n\n      <style jsx>{`\n        .theme-switcher {\n          position: relative;\n        }\n\n        .theme-label {\n          padding: 8px 16px;\n          border-radius: 4px;\n          background: var(--button-background);\n          border: 1px solid var(--border);\n          color: var(--button-text);\n          font-size: 14px;\n          font-family: \"BigNoodleTooOblique\", \"Koverwatch\", sans-serif;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ThemeSwitcher; ","import React, { useState, useMemo } from 'react';\nimport { useHeroData } from '../hooks/useHeroData';\nimport HeroSelector from './HeroSelector';\nimport StatsChart from './StatsChart';\nimport ThemeSwitcher from './ThemeSwitcher';\n// import { useTheme } from '../contexts/ThemeContext';\nimport { HeroStat } from '../types';\n\nconst Dashboard: React.FC = () => {\n  // const { currentTheme } = useTheme();\n  const { \n    heroMeta, \n    mergedData, \n    patchNotes,\n    loading, \n    error, \n    selectedHeroes,\n    availableDates,\n    getHeroById,\n    getHeroStatHistoryForSelectedHeroes,\n    toggleHeroSelection,\n    clearHeroSelection\n  } = useHeroData();\n\n  const [activeStatType, setActiveStatType] = useState<'w' | 's' | 'k'>('w');\n\n  // Get the latest date from the data\n  const latestDate = useMemo(() => {\n    if (!availableDates.length) return '';\n    return availableDates[availableDates.length - 1];\n  }, [availableDates]);\n\n  // Get the latest stats for all heroes\n  const latestStats = useMemo(() => {\n    if (!mergedData || !latestDate) return {};\n    \n    const result: Record<string, HeroStat> = {};\n    \n    mergedData[latestDate]?.h.forEach(stat => {\n      result[stat.i] = stat;\n    });\n    \n    return result;\n  }, [mergedData, latestDate]);\n\n  // Get hero stat history for selected heroes\n  const heroStatHistory = useMemo(() => {\n    const history = getHeroStatHistoryForSelectedHeroes();\n    return history || {};\n  }, [getHeroStatHistoryForSelectedHeroes, selectedHeroes]);\n\n  // Generate colors for each hero\n  const heroColors = useMemo(() => {\n    const colors: Record<string, string> = {};\n    const baseColors = [\n      '#FF5733', '#33FF57', '#3357FF', '#FF33A8', '#33FFF5', \n      '#FF8C33', '#8CFF33', '#338CFF', '#FF33D1', '#33FFD1'\n    ];\n    \n    selectedHeroes.forEach((heroId, index) => {\n      colors[heroId] = baseColors[index % baseColors.length];\n    });\n    \n    return colors;\n  }, [selectedHeroes]);\n\n  // Generate hero names mapping\n  const heroNames = useMemo(() => {\n    const names: Record<string, string> = {};\n    \n    if (heroMeta) {\n      heroMeta.heroes.forEach(hero => {\n        names[hero.hero_id] = hero.hero_name;\n      });\n    }\n    \n    return names;\n  }, [heroMeta]);\n\n  // Get patch dates\n  const patchDates = useMemo(() => {\n    if (!patchNotes) return [];\n    return patchNotes.patches?.map(note => note.date) || [];\n  }, [patchNotes]);\n\n  // 将 patchNotes 转换为 HeroSelector 需要的格式\n  const heroPatches = useMemo(() => {\n    if (!patchNotes || !patchNotes.patches) return [];\n    return patchNotes.patches;\n  }, [patchNotes]);\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading-spinner\"></div>\n        <div className=\"loading-text\">加载中...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <div className=\"error-icon\">⚠️</div>\n        <div className=\"error-message\">错误: {error.message}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard-header\">\n        <div className=\"header-content\">\n          <h1>守望先锋英雄数据分析</h1>\n          <ThemeSwitcher />\n        </div>\n      </header>\n\n      <div className=\"dashboard-content\">\n        <div className=\"sidebar\">\n          <div className=\"hero-selector-container\">\n            {heroMeta && (\n              <HeroSelector\n                heroes={heroMeta.heroes}\n                latestStats={latestStats}\n                selectedHeroes={selectedHeroes}\n                patches={heroPatches}\n                onHeroToggle={toggleHeroSelection}\n                onClearSelection={clearHeroSelection}\n              />\n            )}\n          </div>\n        </div>\n\n        <div className=\"main-content\">\n          <div className=\"stats-container\">\n            <div className=\"stats-header\">\n              <h2>英雄数据趋势</h2>\n              <div className=\"stat-type-buttons\">\n                <button\n                  onClick={() => setActiveStatType('w')}\n                  className={`stat-button ${activeStatType === 'w' ? 'active' : ''}`}\n                >\n                  胜率\n                </button>\n                <button\n                  onClick={() => setActiveStatType('s')}\n                  className={`stat-button ${activeStatType === 's' ? 'active' : ''}`}\n                >\n                  选择率\n                </button>\n                <button\n                  onClick={() => setActiveStatType('k')}\n                  className={`stat-button ${activeStatType === 'k' ? 'active' : ''}`}\n                >\n                  击杀数\n                </button>\n              </div>\n            </div>\n\n            {selectedHeroes.length > 0 ? (\n              <StatsChart\n                data={heroStatHistory}\n                statType={activeStatType}\n                heroColors={heroColors}\n                heroNames={heroNames}\n                patchDates={patchDates}\n                heroMeta={heroMeta}\n              />\n            ) : (\n              <div className=\"empty-chart\">\n                <p>请选择至少一个英雄来查看数据</p>\n              </div>\n            )}\n          </div>\n\n          {/* Patch Notes Section */}\n          {patchNotes && patchNotes.patches && patchNotes.patches.length > 0 && (\n            <div className=\"patch-notes\">\n              <h2>更新日志</h2>\n              <div className=\"patch-notes-list\">\n                {/* 按日期分组显示补丁 */}\n                {(() => {\n                  // 获取唯一日期并按降序排序\n                  const uniqueDates = [...new Set(patchNotes.patches.map(patch => patch.date))].sort().reverse();\n                  \n                  return uniqueDates.map(date => {\n                    // 获取当前日期的所有补丁\n                    const patchesForDate = patchNotes.patches.filter(patch => patch.date === date);\n                    \n                    return (\n                      <div key={date} className=\"patch-date-group\">\n                        <div className=\"patch-date-header\">{date}</div>\n                        <div className=\"patch-heroes-list\">\n                          {patchesForDate.map((patch, index) => {\n                            const hero = getHeroById(patch.hero[0]);\n                            const patchTypeClass = `patch-type-${patch.patchType}`;\n                            \n                            return (\n                              <div key={index} className={`patch-hero-card ${patchTypeClass}`}>\n                                <div className=\"patch-hero-header\">\n                                  <div className=\"patch-hero-icon\">\n                                    {hero && (\n                                      <img \n                                        src={hero.hero_icon} \n                                        alt={hero.hero_name} \n                                        className=\"hero-icon\"\n                                      />\n                                    )}\n                                  </div>\n                                  <div className=\"patch-hero-name\">\n                                    {hero?.hero_name || patch.hero[0]}\n                                    <div className={`patch-type-badge ${patch.patchType}`}>\n                                      {patch.patchType === 'buff' ? '增强' : \n                                       patch.patchType === 'nerf' ? '削弱' : '更新'}\n                                    </div>\n                                  </div>\n                                </div>\n                                <div className=\"patch-content\">\n                                  {patch.content}\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    );\n                  });\n                })()}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <style jsx>{`\n        .dashboard {\n          padding: 24px;\n          max-width: 1440px;\n          margin: 0 auto;\n          min-height: 100vh;\n          background: var(--background);\n          transition: all 0.3s;\n        }\n\n        .dashboard-header {\n          margin-bottom: 24px;\n        }\n\n        .header-content {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          gap: 16px;\n        }\n\n        .dashboard-header h1 {\n          font-size: 32px;\n          font-weight: 600;\n          color: var(--text);\n          margin: 0;\n        }\n\n        .dashboard-content {\n          display: grid;\n          grid-template-columns: 360px 1fr;\n          gap: 24px;\n        }\n\n        .sidebar {\n          position: relative;\n        }\n\n        .hero-selector-container {\n          position: sticky;\n          top: 24px;\n          height: calc(100vh - 100px);\n          min-height: 600px;\n          max-height: 800px;\n          overflow-y: auto;\n        }\n\n        .main-content {\n          display: flex;\n          flex-direction: column;\n          gap: 24px;\n          min-width: 0; /* 防止内容溢出 */\n        }\n\n        .stats-container {\n          display: flex;\n          flex-direction: column;\n          gap: 24px;\n        }\n\n        .stats-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .stats-header h2 {\n          font-size: 24px;\n          font-weight: 600;\n          color: var(--text);\n          margin: 0;\n        }\n\n        .stat-type-buttons {\n          display: flex;\n          gap: 8px;\n        }\n\n        .stat-button {\n          padding: 8px 16px;\n          border-radius: 6px;\n          border: 1px solid var(--border);\n          background: var(--button-background);\n          color: var(--button-text);\n          cursor: pointer;\n          transition: all 0.2s;\n          font-size: 14px;\n        }\n\n        .stat-button:hover {\n          background: var(--button-background-hover);\n        }\n\n        .stat-button.active {\n          background: var(--primary);\n          border-color: var(--primary);\n          color: var(--button-text);\n        }\n\n        .empty-chart {\n          height: 400px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background: var(--card-background);\n          border-radius: 12px;\n          color: var(--secondary-text);\n          font-size: 16px;\n        }\n\n        .patch-notes {\n          background: #1A1A1D;\n          border-radius: 8px;\n          padding: 0;\n          margin-top: 24px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n          border: 1px solid #333;\n          overflow: hidden;\n        }\n\n        .patch-notes h2 {\n          font-size: 18px;\n          font-weight: 500;\n          color: #F0A500;\n          margin: 0;\n          padding: 12px 16px;\n          border-bottom: 1px solid #333;\n          background: #111113;\n        }\n\n        .patch-notes-list {\n          display: flex;\n          flex-direction: column;\n          max-height: 600px;\n          overflow-y: auto;\n          padding: 0;\n        }\n\n        .patch-date-group {\n          display: flex;\n          flex-direction: column;\n        }\n\n        .patch-date-header {\n          font-size: 16px;\n          font-weight: 600;\n          color: #F0A500;\n          padding: 12px 16px;\n          background: #1A1A1D;\n          position: sticky;\n          top: 0;\n          z-index: 1;\n        }\n\n        .patch-heroes-list {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n          gap: 1px;\n          background: #222;\n        }\n\n        .patch-hero-card {\n          background: #1A1A1D;\n          padding: 12px 16px;\n          border-left: 4px solid transparent;\n          transition: all 0.2s;\n        }\n\n        .patch-hero-card:hover {\n          background: #222;\n        }\n\n        .patch-hero-card.patch-type-buff {\n          border-left-color: #28A745;\n        }\n\n        .patch-hero-card.patch-type-nerf {\n          border-left-color: #DC3545;\n        }\n\n        .patch-hero-card.patch-type-update {\n          border-left-color: #F0A500;\n        }\n\n        .patch-hero-header {\n          display: flex;\n          align-items: center;\n          gap: 12px;\n          margin-bottom: 12px;\n        }\n\n        .patch-hero-icon {\n          width: 32px;\n          height: 32px;\n          border-radius: 50%;\n          overflow: hidden;\n          background: #333;\n          flex-shrink: 0;\n        }\n\n        .hero-icon {\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n        }\n\n        .patch-hero-name {\n          font-weight: 500;\n          color: #FFF;\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        .patch-type-badge {\n          font-size: 12px;\n          padding: 2px 8px;\n          border-radius: 4px;\n          font-weight: normal;\n          display: inline-block;\n        }\n\n        .patch-type-badge.buff {\n          background: rgba(40, 167, 69, 0.2);\n          color: #28A745;\n        }\n\n        .patch-type-badge.nerf {\n          background: rgba(220, 53, 69, 0.2);\n          color: #DC3545;\n        }\n\n        .patch-type-badge.update {\n          background: rgba(240, 165, 0, 0.2);\n          color: #F0A500;\n        }\n\n        .patch-content {\n          font-size: 14px;\n          line-height: 1.5;\n          color: #CCC;\n          white-space: pre-line;\n          max-height: 300px;\n          overflow-y: auto;\n        }\n\n        .loading-container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          height: 100vh;\n          gap: 16px;\n        }\n\n        .loading-spinner {\n          width: 40px;\n          height: 40px;\n          border: 4px solid var(--secondary);\n          border-top-color: var(--primary);\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n        }\n\n        .loading-text {\n          color: var(--secondary-text);\n          font-size: 16px;\n        }\n\n        .error-container {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          justify-content: center;\n          height: 100vh;\n          gap: 16px;\n        }\n\n        .error-icon {\n          font-size: 48px;\n        }\n\n        .error-message {\n          color: var(--error);\n          font-size: 16px;\n        }\n\n        @keyframes spin {\n          to {\n            transform: rotate(360deg);\n          }\n        }\n\n        @media (max-width: 1200px) {\n          .dashboard-content {\n            grid-template-columns: 1fr;\n          }\n\n          .hero-selector-container {\n            position: static;\n            height: auto;\n            min-height: auto;\n            max-height: none;\n            margin-bottom: 24px;\n          }\n        }\n\n        @media (max-width: 768px) {\n          .dashboard {\n            padding: 16px;\n          }\n\n          .header-content {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 16px;\n          }\n\n          .dashboard-header h1 {\n            font-size: 24px;\n          }\n\n          .stats-header {\n            flex-direction: column;\n            gap: 16px;\n            align-items: flex-start;\n          }\n\n          .stat-type-buttons {\n            width: 100%;\n          }\n\n          .stat-button {\n            flex: 1;\n            text-align: center;\n          }\n\n          .patch-heroes-list {\n            grid-template-columns: 1fr;\n          }\n        }\n\n        @media (max-width: 480px) {\n          .dashboard-header h1 {\n            font-size: 20px;\n          }\n\n          .stats-header h2 {\n            font-size: 20px;\n          }\n\n          .patch-notes h2 {\n            font-size: 20px;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Dashboard; ","import React from 'react'\nimport Dashboard from './components/Dashboard'\nimport { ThemeProvider } from './contexts/ThemeContext'\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider>\n      <Dashboard />\n    </ThemeProvider>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n \nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n) "],"names":["m","require$$0","style","useHeroData","heroMeta","setHeroMeta","useState","mergedData","setMergedData","patchNotes","setPatchNotes","loading","setLoading","error","setError","selectedHeroes","setSelectedHeroes","availableDates","useMemo","Object","keys","sort","useEffect","heroMetaResponse","mergedDataResponse","patchNotesResponse","Promise","all","fetch","heroMetaData","mergedDataJson","patchNotesData","json","err","Error","getHeroById","useCallback","heroId","heroes","find","hero","hero_id","toggleHeroSelection","prev","includes","filter","id","length","clearHeroSelection","getHeroStatHistoryForSelectedHeroes","result","entries","dateA","dateB","localeCompare","forEach","date","data","heroStats","map","stat","h","s","i","w","k","PatchNotePopover","patches","onClose","heroPatches","patch","body","overflow","groupedPatches","React","grouped","push","createPortal","e","stopPropagation","index","patchType","content","_JSXStyle","document","HEROES_PER_PAGE","HeroSelector","latestStats","onHeroToggle","onClearSelection","console","log","searchTerm","setSearchTerm","selectedRole","setSelectedRole","currentPage","setCurrentPage","selectedPatchHero","setSelectedPatchHero","filteredHeroes","matchesSearch","hero_name","toLowerCase","matchesRole","hero_role","totalPages","Math","ceil","paginatedHeroes","slice","recentlyUpdatedHeroes","now","Date","thirtyDaysAgo","setDate","getDate","reduce","acc","add","Set","target","value","isSelected","stats","hasRecentUpdate","has","hero_icon","toFixed","max","p","min","StatsChart","statType","heroColors","heroNames","patchDates","formatDate","dayjs","format","formatValue","getYAxisDomain","minValue","Infinity","maxValue","values","undefined","range","mid","CustomTooltip","active","payload","label","entry","name","backgroundColor","color","CustomizedDot","props","cx","cy","CustomizedAxisTick","x","y","CustomizedLabel","fontWeight","chartData","ResponsiveContainer","LineChart","top","right","left","bottom","CartesianGrid","XAxis","YAxis","fill","fontSize","Tooltip","Line","r","themes","colors","background","cardBackground","cardBackgroundHover","text","secondaryText","primary","primaryTransparent","secondary","accent","border","chartGrid","success","warning","buttonBackground","buttonBackgroundHover","buttonText","inputBackground","inputBorder","inputText","shadow","ThemeContext","createContext","THEME_STORAGE_KEY","ThemeProvider","children","currentTheme","setCurrentTheme","savedTheme","localStorage","getItem","theme","t","setTheme","themeName","setItem","availableThemes","dynamic","useTheme","context","useContext","ThemeSwitcher","Dashboard","activeStatType","setActiveStatType","latestDate","heroStatHistory","baseColors","names","note","message","reverse","patchesForDate","patchTypeClass","App","ReactDOM","createRoot","getElementById","render"],"mappings":"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","x_google_ignoreList":[0,1]}