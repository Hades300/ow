name: Daily Data Collection

on:
  schedule:
    # 每天北京时间 10:30 运行（UTC 02:30）
    - cron: '30 2 * * *'
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write

jobs:
  collect:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install axios jsdom

      - name: Fetch hero data
        run: |
          node -e '
          const axios = require("axios");
          const fs = require("fs");
          const path = require("path");

          function getCurrentSeason() {
            const seasonsPath = path.join("data", "seasons.json");
            const seasons = JSON.parse(fs.readFileSync(seasonsPath, "utf8")).seasons;
            const today = new Date();
            
            for (const season of seasons) {
              const startDate = new Date(season.start_date);
              const endDate = season.end_date ? new Date(season.end_date) : new Date("9999-12-31");
              
              if (today >= startDate && today <= endDate) {
                return season.season;
              }
            }
            
            return seasons[seasons.length - 1].season;
          }

          function optimizeHeroData(heroData) {
            return heroData.map(hero => ({
              i: hero.hero_id,           // id
              t: hero.hero_type,         // type
              s: hero.selection_ratio,   // selection
              w: hero.win_ratio,         // win
              k: hero.kda,               // kda
              d: hero.ds                 // date
            }));
          }

          function updateMergedData(newData) {
            const mergedFilePath = path.join("data", "merged_data.json");
            let mergedData = {};

            if (fs.existsSync(mergedFilePath)) {
              mergedData = JSON.parse(fs.readFileSync(mergedFilePath, "utf8"));
            }

            // Extract server date from the first hero entry
            const serverDate = newData.data.data[0].ds;
            
            // Store optimized data
            mergedData[serverDate] = {
              s: newData.season,
              h: optimizeHeroData(newData.data.data)
            };

            fs.writeFileSync(mergedFilePath, JSON.stringify(mergedData, null, 2));
            console.log(`Updated merged data file with data for ${serverDate}`);
          }

          async function fetchData() {
            try {
              const currentSeason = getCurrentSeason();
              console.log(`Using season: ${currentSeason}`);

              const response = await axios.get("https://webapi.blizzard.cn/ow-armory-server/hero_leaderboard", {
                params: {
                  game_mode: "jingji",
                  season: currentSeason,
                  mmr: "-127"
                },
                headers: {
                  "accept": "application/json",
                  "origin": "https://ow.blizzard.cn",
                  "referer": "https://ow.blizzard.cn/"
                }
              });

              const dataToSave = {
                season: currentSeason,
                data: response.data
              };

              // Save raw data with server timestamp
              const serverDate = response.data.data[0].ds;
              const dataDir = path.join("data", "daily");
              const filePath = path.join(dataDir, `${serverDate}.json`);
              
              if (!fs.existsSync(dataDir)) {
                fs.mkdirSync(dataDir, { recursive: true });
              }

              fs.writeFileSync(filePath, JSON.stringify(dataToSave, null, 2));
              console.log(`Successfully collected data for ${serverDate} (Season ${currentSeason})`);

              // Update merged data file
              updateMergedData(dataToSave);
            } catch (error) {
              console.error("Error fetching data:", error.message);
              process.exit(1);
            }
          }

          fetchData();
          '

      - name: Fetch patch notes
        run: node scripts/fetch_patch_notes.cjs
        continue-on-error: true

      - name: Create debug directory
        run: mkdir -p debug
        continue-on-error: true

      - name: Commit and push if changed
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add data/daily/ data/merged_data.json public/data/patch_notes.json
          git diff --quiet && git diff --staged --quiet || (
            git commit -m "Update game data $(date +'%Y-%m-%d')"
            git push "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git"
          )